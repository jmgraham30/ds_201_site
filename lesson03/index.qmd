---
title: "Lesson 3"
subtitle: "Data Wrangling"
author: "JMG"
format:
  html:
    code-fold: true
    code-summary: "Show the code"
    toc: true
    toc-location: left
bibliography: lesson03.bib
license: "CC BY-NC-SA 4.0"
---

```{r}
#| echo: false
#| message: false
#| warning: false

# load packages used in document
library(tidyverse)
library(readxl)
library(gapminder)
library(kableExtra)

# read in data files
happiness_report_csv <- read_csv("https://raw.githubusercontent.com/UBC-DSCI/data-science-a-first-intro-worksheets/main/worksheet_reading/data/happiness_report.csv")
happiness_report_xl <- read_xlsx("/Users/jasongraham/Library/CloudStorage/Dropbox/WorkDocuments/Teaching/Falls/Fall2023/DS 201/happiness_report.xlsx")
```


## Learning Objectives

After this lesson, students will be able to: 

* Use the `dplyr` functions  `select` and `filter` to manipulate rows and columns of a data frame. 

* Use the `mutate` function to add new columns to a data frame. 

* Use `group_by` to group observations in one or more columns of a data frame by a grouping variable. 

* Use the `summarize` function with the `group_by` function to compute grouped summaries. 

* Use `pivot_longer` and `pivot_wider` functions to perform certain types of reorganizations of a data frame. 

* Use the `join` family of functions to combine separate data sets into one. 

## Readings, etc.

For this lesson, refer to the following readings, etc.:

* Chapter 3 of *Data Science: A First Introduction* by Tiffany Timbers, Trevor Campbell, and Melissa Lee [@timbers2022data]. [View the free online version of the text.](https://datasciencebook.ca/).

* Chapter 5 of *R for Data Science* by Wickham and Grolemund [@wickham2023r]. [View the chapter online](https://r4ds.had.co.nz/transform.html)

* The TidyTuesday data repository [@TT].

## Overview

Real world data rarely comes in exactly the right form for the analysis you want to do. This has led to the implementation of methods that facilitate manipulating data in a way that allows us to more easily address some of the common problems with data sets. In this lesson, we will introduce such methods which include but are not limited to 

* selecting certain rows or columns of tabular data

* creating new variables or column, often by transforming existing ones

* grouping or arranging observations

* reshaping parts of the data

* joining multiple tabular data sets 

A particularly common application of these methods is to get data into an appropriate shape required for a particular type of plot, visualization, or summary. 

The R package `dplyr` which belongs to the `tidyverse` family of packages is one of the available implementations of the common data manipulation methods. The `dplyr` package is robust, well-documented, easy-to-use, and efficient so we will explore it in this lesson. It is worth it to take a moment to visit the ['dplyr' website](https://dplyr.tidyverse.org/) as it contains helpful information and resources, [view the webpage](https://dplyr.tidyverse.org/). 

## Data For the Lesson

In this lesson, we will make use of a few data sets. This includes:

* The Gapminder data set which is available in R through the `gapminder` package. To refresh our memories, let's examine the first few rows of the Gapminder data:

```{r}
gapminder %>%
  head() %>%
  kable()
```



## Preparation for the next lesson

For the next lesson we will begin discussing the exploratory data analysis (EDA) process starting with some data visualization. 

Prior to starting the next lesson, please read [Chapter 4](https://datasciencebook.ca/intro.html) of [@timbers2022data], link [here](https://datasciencebook.ca/intro.html). 

## References

::: {#refs}
:::


:::{.callout-tip collapse="true"}
## Expand for Session Info
```{r}
#| echo: false


library(sessioninfo)
# save the session info as an object
pkg_sesh <- session_info(pkgs = "attached")

# get the quarto version
quarto_version <- system("quarto --version", intern = TRUE)

# inject the quarto info
pkg_sesh$platform$quarto <- paste(
  system("quarto --version", intern = TRUE), 
  "@", 
  quarto::quarto_path()
  )

# print it out
pkg_sesh
```

:::


[![](http://mirrors.creativecommons.org/presskit/buttons/88x31/png/by-nc-sa.png?raw=1){fig-align="left" width=15%}](https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode)


